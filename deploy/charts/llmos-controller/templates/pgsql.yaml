---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "llmos-controller.fullname" . }}-db
  labels:
    {{- include "llmos-controller.labels" . | nindent 4 }}
    "app.kubernetes.io/component": "configuration"
stringData:
  db_driver: {{ .Values.pgsql.db.driver | quote }}
  db_user: {{ .Values.pgsql.db.user | quote }}
  db_password: {{ .Values.pgsql.db.password | quote }}
  db_name: {{ .Values.pgsql.db.name | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "llmos-controller.fullname" . }}-db-script
data:
  "init.sh": |
    #!/usr/bin/env bash

    set -o errexit
    set -o nounset
    set -o pipefail

    if [[ ! -d ${PGDATA} ]]; then
      mkdir -p ${PGDATA}
      chown 9999:9999 ${PGDATA}
    fi

  "probe.sh": |
    #!/usr/bin/env bash

    set -o errexit
    set -o nounset
    set -o pipefail

    psql --no-password --username=${POSTGRES_USER} --dbname=${POSTGRES_DB} --command="SELECT 1"

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "llmos-controller.fullname" . }}-db
spec:
  selector:
    {{- include "llmos-controller.labels" . | nindent 4 }}
    "app.kubernetes.io/component": "database"
  ports:
    - name: pgsql
      port: 5432
      targetPort: pgsql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "llmos-controller.fullname" . }}-db
  labels:
    {{- include "llmos-controller.labels" . | nindent 4 }}
    "app.kubernetes.io/component": "database"
spec:
  # Use default StorageClass when a StorageClass is not specified.
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "llmos-controller.fullname" . }}-db
  labels:
    {{- include "llmos-controller.labels" . | nindent 4 }}
    "app.kubernetes.io/component": "database"
    "app.kubernetes.io/name": "postgres"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "llmos-controller.selectorLabels" . | nindent 6 }}
      "app.kubernetes.io/component": "database"
  template:
    metadata:
      labels:
        {{- include "llmos-controller.labels" . | nindent 8 }}
        "app.kubernetes.io/component": "database"
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: init
          image: {{ .Values.pgsql.image.repository }}
          imagePullPolicy: {{ .Values.pgsql.image.pullPolicy }}
          command:
            - /script/init.sh
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: script
              mountPath: /script
            - name: data
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: {{ .Values.pgsql.image.repository }}
          imagePullPolicy: {{ .Values.pgsql.image.pullPolicy }}
          resources:
            limits:
              cpu: "4"
              memory: "8Gi"
            requests:
              cpu: "200m"
              memory: "256Mi"
          securityContext:
            runAsUser: 9999
          ports:
            - name: pgsql
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "llmos-controller.fullname" . }}-db
                  key: db_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "llmos-controller.fullname" . }}-db
                  key: db_password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "llmos-controller.fullname" . }}-db
                  key: db_name
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          startupProbe:
            failureThreshold: 10
            periodSeconds: 5
            exec:
              command:
                - /script/probe.sh
          readinessProbe:
            failureThreshold: 3
            timeoutSeconds: 5
            periodSeconds: 5
            exec:
              command:
                - /script/probe.sh
          livenessProbe:
            failureThreshold: 3
            timeoutSeconds: 5
            periodSeconds: 10
            exec:
              command:
                - /script/probe.sh
          volumeMounts:
            - name: script
              mountPath: /script
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: script
          configMap:
            name: {{ include "llmos-controller.fullname" . }}-db-script
            defaultMode: 0555
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "llmos-controller.fullname" . }}-db
